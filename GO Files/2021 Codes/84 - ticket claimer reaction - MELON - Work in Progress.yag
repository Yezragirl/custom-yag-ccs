{{/*Ticket Claimer Reaction*/}}
{{$al := 653058600230584353}}
{{$rid := 588749231150465049}}
{{$tr := 654151821039894547}}

{{$c := .Channel.Name}}
{{$name := or .Member.Nick .User.Username}}
{{$weekly := or (dbGet .User.ID "weekly").Value sdict}}
{{$tdc := (dbGet .User.ID "todocount").Value}}
{{$wtdc := $weekly.Get "todos"}}
{{$tc := (dbGet .User.ID "tickets").Value}}
{{$wtc := $weekly.Get "tickets"}}
{{$map := (dbGet 0 "ticketClaimerMaps").Value.Get .Reaction.Emoji.ID}}
{{$reactions := (dbGet 0 "ticketReactionIDs").Value}}
{{$matched := index (index (reFindAllSubmatches `([^-]+-[^-]+)(.+)?` $c) 0) 1}}
{{$ticket := or (dbGet .Channel.ID "ticket_control").Value sdict}}
{{if eq .ReactionMessage.ID (toInt64 $ticket.msg)}}
{{if $cd := dbGet .Channel.ID "ticketsCooldown"}}
    {{print "This command's cooldown expires <t:" $cd.ExpiresAt.Unix ":R>"}}
{{else}}
    {{$allMatch := true}}
    {{$count := 0}}
    {{if eq .Channel.ParentID 635305499600093214}}
        {{if eq .Reaction.Emoji.ID 660605488609755146}}{{/*CLAIM*/}}
            {{if $ticket.hold}}
                {{sendMessage $al (print $name " has removed ticket " $matched " from hold.")}}
                {{sendMessage nil (print $name " will be assisting you.")}}
                {{$ticket.Del "hold"}}
                {{$R := execAdmin "tickets rename" (print $ticket.old $name)}}
                {{$ticket.Set "claimer" .User.ID}}
                {{$tc = add $tc 1}}
                {{$wtc = add $wtc 1}}
                {{if and (hasRoleID $rid) (eq (toInt $tc) 3)}}
                    {{$ps := dbIncr .User.ID "AdminPoints" 1}}
                    {{sendMessage $al (print $name " earned 1 point for tickets.")}}
                    {{sendMessage $tr (print .User.Mention " earned 1 point for tickets\n" .User.Mention " now has " (str $ps) " points.")}}
                    {{dbSet .User.ID "tickets" 0}}
                {{else}}
                    {{dbSet .User.ID "tickets" $tc}}
                {{end}}
                 {{$weekly.Set "tickets" $wtc}}
            {{else}}
                {{if $ticket.claimer}}
                    {{if eq $ticket.claimer .User.ID}}
                        {{sendMessage $al (print $name " has unclaimed ticket " $matched)}}
                        {{sendMessageNoEscape nil (print $name " will no longer be assisting you. Please be patient, and someone else from <@&634598489732546588> will be with you shortly. ")}}
                        {{$ticket.Del "claimer"}}
                        {{$R := execAdmin "tickets rename" (print $ticket.old)}}
                        {{$tc = sub $tc 1}}
                        {{$wtc = sub $wtc 1}}
                        {{dbSet .User.ID "tickets" $tc}}
                    {{else}}
                        {{sendMessage $al (print $name " has claimed ticket " $matched)}}
                        {{sendMessage nil (print $name " will be assisting you.")}}
                        {{$R := execAdmin "tickets rename" (print $ticket.old "-" $name)}}
                        {{$unclaimer := $ticket.claimer}}
                        {{$x := dbIncr $unclaimer "tickets" -1}}
                        {{$ticket.Set "claimer" .User.ID}}
                        {{$tc = add $tc 1}}
                        {{$wtc = add $wtc 1}}
                        {{if and (hasRoleID $rid) (eq (toInt $tc) 3)}}
                            {{$ps := dbIncr .User.ID "AdminPoints" 1}}
                            {{sendMessage $al (print $name " earned 1 point for tickets.")}}
                            {{sendMessage $tr (print .User.Mention " earned 1 point for tickets.\n" .User.Mention " now has " (str (toInt $ps)) " points.")}}
                            {{dbSet .User.ID "tickets" 0}}
                        {{else}}
                            {{dbSet .User.ID "tickets" $tc}}
                        {{end}}
                    {{end}}
                    {{$weekly.Set "tickets" $wtc}}
                {{else}}
                    {{sendMessage $al (print $name " has claimed ticket " $matched)}}
                    {{$R := execAdmin "tickets rename" (print $ticket.old "-" $name)}}
                    {{sendMessage nil (print $name " will be assisting you.")}}
                    {{$ticket.Set "claimer" .User.ID}}
                    {{$tc = add $tc 1}}
                    {{$wtc = add $wtc 1}}
                    {{if and (hasRoleID $rid) (eq (toInt $tc) 3)}}
                        {{$ps := dbIncr .User.ID "AdminPoints" 1}}
                        {{sendMessage $al (print $name " earned 1 point for tickets.")}}
                        {{sendMessage $tr (print .User.Mention " earned 1 point for tickets.\n" .User.Mention " now has " (str (toInt $ps)) " points.")}}
                        {{dbSet .User.ID "tickets" 0}}
                    {{else}}
                        {{dbSet .User.ID "tickets" $tc}}
                    {{end}}
                    {{$weekly.Set "tickets" $wtc}}
                {{end}}
            {{end}}
        {{else if eq .Reaction.Emoji.ID 660605465721569334}}{{/*CLOSE*/}}
            {{sendMessage nil (print $name " has closed this ticket. If you have further issues, please open a new ticket. This channel will be deleted in 30 seconds.")}}
            {{sleep 30}}
            {{sendMessage $al (print $name " has closed ticket " $matched "." )}}
            {{sendMessage 634442883440836609 (print $name " has closed ticket " $matched "." )}}{{/*TRANS*/}}
            {{dbDel (toInt64 .Channel.ID) "ticket_control"}}
            {{exec "tickets close" (print "Ticket closed by " .User.Username)}}
        {{else if eq .Reaction.Emoji.ID 631218688099614724}}{{/*HOLD*/}}
            {{if $ticket.hold}}
                {{$R := execAdmin "tickets rename" (print $ticket.old)}}
                {{sendMessage $al (print $name " has removed ticket " $matched " from hold." )}}
                {{sendMessage nil (print $name " has removed this ticket from hold." )}}
                {{$ticket.Del "hold"}}
            {{else}}
                {{sendMessage $al (print $name " has placed ticket " $matched " on hold." )}}
                {{sendMessage nil (print $name " has placed this ticket on hold.")}}
                {{$R := execAdmin "tickets rename" (print $ticket.old "-hold")}}
                {{if $ticket.claimer}}
                    {{$ticket.Del "claimer"}}
                {{end}}
                {{$ticket.Set "hold" 1}}
            {{end}}
        {{end}}
    {{dbSet .Channel.ID "ticket_control" $ticket}}
    {{end}}
    {{if or (reFind `restock-and-repin$` $c) (reFind `map-sweeps$` $c)}}
        {{if .ReactionAdded}}
            {{sendMessage $al (print $name " completed the restock/map sweep for " $map ".")}}
            {{$tdc = add $tdc 1}}
            {{$wtdc = add $wtdc 1}}
            {{if hasRoleID $rid}} 
                {{if eq (toInt $tdc) 10}}
                    {{$ps := dbIncr .User.ID "AdminPoints" 1}}
                    {{sendMessage $al (print $name " earned 1 point for starters/to do list things.")}}
                    {{sendMessage $tr (print .User.Mention " earned 1 point for starters/to do list things." .User.Mention " now has " (str (toInt $ps)) " points.")}}
                    {{dbSet .User.ID "todocount" 0}}
                {{else}}
                    {{dbSet .User.ID "todocount" $tdc}}
                {{end}}
                {{$weekly.Set "todos" $wtdc}}
            {{end}}
        {{else}}
            {{sendMessage $al (print $name " canceled the restock/map sweep for " $map ".")}}
            {{$tdc = sub $tdc 1}}
            {{$wtdc = sub $wtdc 1}}
            {{if hasRoleID $rid}} 
                {{if eq (toInt $tdc) -1}}
                    {{$ps := dbIncr .User.ID "AdminPoints" -1}}
                    {{sendMessage $al (print $name " lost 1 point for undoing restock/map sweep. To Do Count reset to 9.")}}
                    {{sendMessage $tr (print .User.Mention " lost 1 point for undoing restock/map sweep. To Do Count reset to 9." .User.Mention " now has " (str (toInt $ps)) " points.")}}
                    {{dbSet .User.ID "todocount" 9}}
                {{else}}
                    {{dbSet .User.ID "todocount" $tdc}}
                {{end}}
                {{$weekly.Set "todos" $wtdc}}
            {{end}}
        {{end}}
        {{range (dbGet .Channel.ID "mapEmojis").Value}}
            {{- $msg := getMessage nil . -}}
            {{- range $msg.Reactions -}}
                {{- if and (in $reactions .Emoji.ID) (ge .Count 2)}}
                    {{- $count = add $count 1 -}}
                {{- else -}}
                    {{- $allMatch = false -}}
                    {{- print .Emoji.ID " " -}}
                {{- end -}}
            {{- end -}}
        {{end}}
        {{if $allMatch}}
            {{if and (reFind `\x{23fa}map-sweeps$` $c) (eq $count 2)}}
                {{exec "tickets close" "All Map Sweeps Complete"}}
            {{else if and (reFind `\x{274e}map-sweeps$` $c) (eq $count 24)}}
                {{exec "tickets close" "All Map Sweeps Complete"}}
            {{else if and (reFind `\x{274e}restock-and-repin$` $c) (eq $count 22)}}
                {{exec "tickets close" "All Restocks and Repins Complete"}}
            {{else if and (reFind `\x{23fa}restock-and-repin$` $c) (eq $count 2)}}
                {{exec "tickets close" "All Restocks and Repins Complete"}}
            {{end}}
        {{end}}
    {{end}}
    {{dbSet .User.ID "weekly" $weekly}}
    {{dbSetExpire .Channel.ID "ticketsCooldown" "ticketsCooldown" 300}}
{{end}}
{{end}}